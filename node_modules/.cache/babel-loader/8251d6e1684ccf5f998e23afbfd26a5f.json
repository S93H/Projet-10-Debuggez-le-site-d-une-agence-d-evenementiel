{"ast":null,"code":"var _jsxFileName = \"/home/sylvain/Openclassrooms/HUTT_Sylvain_10_D\\xE9buggez_le_site_d'une_agence_d'\\xE9v\\xE9nementiel_112023/Debuggez-une-application-React.JS/src/containers/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  const [sending, setSending] = useState(false);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true); // We try to call mockContactApi\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      onSuccess(); // J'ppeler onSuccess après l'envoi réussi\n\n      setConfirmationOpen(true); // Ouvrir le message de confirmation\n    } catch (err) {\n      setSending(false);\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendContact,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            placeholder: \"\",\n            label: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            placeholder: \"\",\n            label: \"Pr\\xE9nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            selection: [\"Personel\", \"Entreprise\"],\n            onChange: () => null,\n            label: \"Personel / Entreprise\",\n            type: \"large\",\n            titleEmpty: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            placeholder: \"\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: BUTTON_TYPES.SUBMIT,\n            disabled: sending,\n            children: sending ? \"En cours\" : \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            placeholder: \"message\",\n            label: \"Message\",\n            type: FIELD_TYPES.TEXTAREA\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), confirmationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModalMessage--success\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Message envoy\\xE9 !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"zbQvSUEu55ndOPumUUioU2zfgAE=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func\n};\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/sylvain/Openclassrooms/HUTT_Sylvain_10_Débuggez_le_site_d'une_agence_d'événementiel_112023/Debuggez-une-application-React.JS/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","sending","setSending","confirmationOpen","setConfirmationOpen","sendContact","evt","preventDefault","err","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\nconst mockContactApi = () => new Promise((resolve) => { setTimeout(resolve, 1000); })\n\nconst Form = ({ onSuccess, onError }) => {\n  const [sending, setSending] = useState(false);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n\n  const sendContact = useCallback(\n    async (evt) => {\n      evt.preventDefault();\n      setSending(true);\n      // We try to call mockContactApi\n      try {\n        await mockContactApi();\n        setSending(false);\n        onSuccess(); // J'ppeler onSuccess après l'envoi réussi\n        setConfirmationOpen(true); // Ouvrir le message de confirmation\n      } catch (err) {\n        setSending(false);\n        onError(err);\n      }\n    },\n    [onSuccess, onError]\n  );\n  return (\n    <>\n    <form onSubmit={sendContact}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field placeholder=\"\" label=\"Nom\" />\n          <Field placeholder=\"\" label=\"Prénom\" />\n          <Select\n            selection={[\"Personel\", \"Entreprise\"]}\n            onChange={() => null}\n            label=\"Personel / Entreprise\"\n            type=\"large\"\n            titleEmpty\n          />\n          <Field placeholder=\"\" label=\"Email\" />\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field\n            placeholder=\"message\"\n            label=\"Message\"\n            type={FIELD_TYPES.TEXTAREA}\n          />\n        </div>\n      </div>\n    </form>\n    {confirmationOpen && (\n      <div className=\"ModalMessage--success\">\n        <div>Message envoyé !</div>\n      </div>\n    )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func,\n}\n\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null,\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}